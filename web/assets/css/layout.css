/* ========================================
   Layout - Main Structure & Components
   ======================================== */

/* App Container */
#app {
  display: flex;
  flex-direction: column;
  height: 100vh;
  overflow: hidden;
}

/* Header */
header {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background: var(--bg-secondary);
  border-bottom: 1px solid var(--border);
  padding: 1rem;
  z-index: 101; /* Higher than usage panel */
  height: 60px; /* Fixed height */
}

.header-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
  max-width: 1400px;
  margin: 0 auto;
}

.header-right {
  display: flex;
  align-items: center;
  gap: 1rem;
}

h1 {
  font-size: 1.5rem;
  color: var(--accent);
}

.auth-status {
  color: var(--success);
  font-size: 0.9rem;
}

/* Plan Mode Toggle in Header */
.header-center {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
}

.plan-mode-toggle {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.plan-mode-label {
  font-weight: 600;
  color: var(--text-secondary);
  cursor: pointer;
  user-select: none;
  transition: color 0.3s;
}

/* Main Content Area */
main {
  display: flex;
  flex: 1;
  overflow: hidden;
  min-height: 0; /* Allow flex child to shrink below content size */
  height: 100vh; /* Full viewport height since header is fixed */
}

/* Connection Status Indicator */
.connection-status {
  display: none;
  padding: 0.25rem 0.75rem;
  border-radius: 4px;
  font-size: 0.875rem;
  font-weight: 500;
  animation: pulse 2s infinite;
}

.connection-status.reconnecting {
  background: rgba(255, 152, 0, 0.2);
  color: #ff9800;
  border: 1px solid rgba(255, 152, 0, 0.3);
}

.connection-status.disconnected {
  background: rgba(244, 67, 54, 0.2);
  color: #f44336;
  border: 1px solid rgba(244, 67, 54, 0.3);
}

.connection-status.connected {
  display: none !important;
}

.connection-status a {
  color: inherit;
  text-decoration: underline;
  margin-left: 0.5rem;
}

.connection-status a:hover {
  opacity: 0.8;
}

/* Toggle Switch Component */
.switch {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 24px;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--bg-tertiary);
  transition: .4s;
  border: 1px solid var(--border);
}

.slider:before {
  position: absolute;
  content: "";
  height: 16px;
  width: 16px;
  left: 3px;
  bottom: 3px;
  background-color: white;
  transition: .4s;
}

input:checked + .slider {
  background-color: var(--plan-mode);
  border-color: var(--plan-mode);
}

input:checked + .slider:before {
  transform: translateX(26px);
}

.slider.round {
  border-radius: 24px;
}

.slider.round:before {
  border-radius: 50%;
}

input:checked ~ .plan-mode-label {
  color: var(--plan-mode-light);
}

/* Overlay for plan execution */
.plan-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  z-index: 999;
  display: none;
}

/* Empty State */
.empty-state {
  padding: 2rem;
  text-align: center;
  color: var(--text-secondary);
}

/* Auth Prompt */
.auth-prompt {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  padding: 2rem;
}

.auth-prompt h2 {
  margin-bottom: 1rem;
}

.auth-prompt p {
  color: var(--text-secondary);
  margin-bottom: 2rem;
}