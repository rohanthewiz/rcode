#!/bin/bash

# Test script for session validation in permission responses
# This script tests that session ownership is properly validated

echo "ðŸ§ª Testing Session Validation for Permission Responses"
echo "===================================================="
echo ""
echo "Prerequisites:"
echo "1. Start the RCode server: go run main.go"
echo "2. Login and create two different sessions"
echo "3. Set write_file tool to 'Ask' mode in both sessions"
echo ""
echo "Test Cases:"
echo ""
echo "1. Test valid session response:"
echo "   - In Session 1: Send 'Create a test file'"
echo "   - When permission dialog appears, approve it"
echo "   - Expected: Permission is granted, file is created"
echo ""
echo "2. Test cross-session attack prevention:"
echo "   - In Session 1: Send 'Create another test file'"
echo "   - Note the requestId from browser console"
echo "   - In Session 2's console, try to approve Session 1's request:"
echo "     fetch('/api/permission-response', {"
echo "       method: 'POST',"
echo "       headers: {'Content-Type': 'application/json'},"
echo "       body: JSON.stringify({"
echo "         requestId: '<Session1-RequestId>',"
echo "         sessionId: currentSessionId, // This is Session 2's ID"
echo "         approved: true,"
echo "         rememberChoice: false"
echo "       })"
echo "     })"
echo "   - Expected: 403 Forbidden error with 'unauthorized: session does not own this permission request'"
echo ""
echo "3. Test missing session ID:"
echo "   - In browser console, send a response without sessionId:"
echo "     fetch('/api/permission-response', {"
echo "       method: 'POST',"
echo "       headers: {'Content-Type': 'application/json'},"
echo "       body: JSON.stringify({"
echo "         requestId: 'any-id',"
echo "         approved: true,"
echo "         rememberChoice: false"
echo "       })"
echo "     })"
echo "   - Expected: 400 Bad Request error with 'session ID is required'"
echo ""
echo "Security Verification:"
echo "âœ“ Each session can only approve its own permission requests"
echo "âœ“ Cross-session permission hijacking is prevented"
echo "âœ“ Session ID is required for all permission responses"
echo "âœ“ Invalid/mismatched session IDs are rejected with 403"
echo ""
echo "Backend Logs to Check:"
echo "- Look for 'Session mismatch in permission response' warnings"
echo "- Verify session IDs in permission request creation logs"
echo "- Check for 403 responses in server logs"